@page "/inputs"
@inject UIStateService UiStateService
<IonContent fullscreen>
    <ion-list lines="full" class="ion-no-margin">
        <ion-list-header lines="full">
            <ion-label>
                Label Positions
            </ion-label>
        </ion-list-header>
        <IonItem>
            <ion-label>Default Label @Input1</ion-label>
            <IonInput placeholder="placeholder" @bind-Value="Input1"></IonInput>
        </IonItem>
        <IonItem>
            <ion-label position="fixed">Fixed Label</ion-label>
            <IonInput placeholder="placeholder" @bind-Value="Input1"></IonInput>
        </IonItem>
        <IonItem>
            <ion-label position="stacked">Stacked Label</ion-label>
            <IonInput placeholder="placeholder" @bind-Value="Input1"></IonInput>
        </IonItem>
        <IonItem>
            <ion-label position="floating">Floating Label</ion-label>
            <IonInput @bind-Value="Input1"></IonInput>
        </IonItem>
        <IonItem>
            <IonSearchBar placeholder="Search bar" @bind-Value="Input1"></IonSearchBar>
        </IonItem>
    </ion-list>

    <ion-list lines="full" class="ion-no-margin">
        <ion-list-header lines="full">
            <ion-label>
                Input Types
            </ion-label>
        </ion-list-header>

        <IonItem>
            <ion-label>Text Input</ion-label>
            <IonInput placeholder="placeholder" type="text" @bind-Value="Input1"></IonInput>
        </IonItem>

        <IonItem>
            <ion-label>Number Input @Input2</ion-label>
            <IonInput placeholder="placeholder" type="number" @bind-Value="Input2"></IonInput>
        </IonItem>

        <IonItem>
            <ion-label>Password Input</ion-label>
            <IonInput TItem="string" placeholder="placeholder" type="password" @bind-Value="Input1"></IonInput>
        </IonItem>

        <IonItem>
            <ion-label position="stacked">Multiple Inputs</ion-label>
            <IonInput TItem="string" placeholder="Address Line 1"></IonInput>
            <IonInput TItem="string" placeholder="Address Line 2"></IonInput>
            <IonInput TItem="string" placeholder="City"></IonInput>
            <IonInput TItem="string" placeholder="State"></IonInput>
            <IonInput TItem="string" placeholder="Zip Code"></IonInput>
        </IonItem>

        <IonItem>
            <ion-label position="stacked">Textarea</ion-label>
            <IonTextArea placeholder="placeholder"></IonTextArea>
        </IonItem>

        <IonItem>
            <ion-label>Date</ion-label>
            <IonDateTime display-format="h:mm A" picker-format="h:mm A"></IonDateTime>
        </IonItem>
    </ion-list>
    <ion-list>
        <ion-list-header lines="full">
            <ion-label>
                Radio groups
            </ion-label>
        </ion-list-header>
        <IonRadioGroup @bind-Value="Input3">
            <ion-list-header>
                <ion-label>Selected: @Input3</ion-label>
            </ion-list-header>

            <IonItem>
                <ion-label>Biff</ion-label>
                <ion-radio slot="start" value="biff"></ion-radio>
            </IonItem>

            <IonItem>
                <ion-label>Griff</ion-label>
                <ion-radio slot="start" value="griff"></ion-radio>
            </IonItem>
            <IonItem>
                <ion-label>Buford</ion-label>
                <ion-radio slot="start" value="buford"></ion-radio>
            </IonItem>
        </IonRadioGroup>
    </ion-list>
    <ion-list>
        <ion-list-header lines="full">
            <ion-label>
                Segments
            </ion-label>
        </ion-list-header>
        <IonSegment @bind-Value="Input3">
            <ion-segment-button value="griff">
                <ion-label>Griff</ion-label>
            </ion-segment-button>
            <ion-segment-button value="buford">
                <ion-label>Buford</ion-label>
            </ion-segment-button>
        </IonSegment>
    </ion-list>
    <ion-list>
        <ion-list-header lines="full">
            <ion-label>
                Checkboxes
            </ion-label>
        </ion-list-header>

        <IonItem>
            <ion-label>Jon Snow checkbox value:  @CheckboxValue</ion-label> 
            <IonCheckbox color="primary" @bind-Value="CheckboxValue" slot="start"></IonCheckbox>
        </IonItem>
    </ion-list>
    <ion-list>
        <ion-list-header lines="full">
            <ion-label>
                Toggles
            </ion-label>
        </ion-list-header>
        <IonItem>
            <ion-label>Blueberry  @ToggleValue</ion-label>
            <IonToggle slot="start" name="blueberry" @bind-Value="ToggleValue"></IonToggle>
        </IonItem>
    </ion-list>
    <ion-list>
        <ion-list-header lines="full">
            <ion-label>
                Ranges
            </ion-label>
        </ion-list-header>
        <IonItem>
            <IonRange color="danger" pin="true"></IonRange>
        </IonItem>

        <IonItem>
            <IonRange min="-200" max="200" color="secondary">
                <ion-label slot="start">-200</ion-label>
                <ion-label slot="end">200</ion-label>
            </IonRange>
        </IonItem>

        <IonItem>
            <IonRange min="20" max="80" step="2">
                <ion-icon size="small" slot="start" name="sunny"></ion-icon>
                <ion-icon slot="end" name="sunny"></ion-icon>
            </IonRange>
        </IonItem>

        <IonItem>
            <IonRange min="1000" max="2000" step="100" snaps="true" color="secondary"></IonRange>
        </IonItem>

        <IonItem>
            <IonRange min="1000" max="2000" step="100" snaps="true" ticks="false" color="secondary"></IonRange>
        </IonItem>

        <IonItem>
            <IonDualRange min="21" max="72" step="3" snaps="true"></IonDualRange>
        </IonItem>
    </ion-list>

</IonContent>


@code {

    public DateTimeOffset EndDate { get; set; } = new DateTimeOffset(2020,12,12,12,12,12, new TimeSpan(0));

    protected override void OnInitialized()
    {
        UiStateService.Title = "Inputs";
        base.OnInitialized();
    }

    public string Input1 { get; set; }
    public int? Input2 { get; set; }
    public string Input3 { get; set; }
    public bool CheckboxValue {get; set; }
    public bool ToggleValue {get; set; }


}