<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>netstandard2.1</TargetFramework>
        <RazorLangVersion>3.0</RazorLangVersion>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" Version="3.2.1" />
        <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.Build" Version="3.2.1" PrivateAssets="all" />
        <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" Version="3.2.1" PrivateAssets="all" />
        <PackageReference Include="System.Net.Http.Json" Version="3.2.0" />
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="../Blazor.Ionic.Demo.UI/Blazor.Ionic.Demo.UI.csproj" />
      <ProjectReference Include="../Blazor.Ionic/Blazor.Ionic.csproj" />
    </ItemGroup>
    <PropertyGroup Condition="'$(Configuration)' == 'Release' ">
        <DefineConstants>LIVESHARP_DISABLE</DefineConstants>
    </PropertyGroup>

    <ItemGroup Condition="'$(Configuration)' != 'Release' ">
        <PackageReference Include="Microsoft.AspNetCore.SignalR.Client" Version="3.1.8" />
        <PackageReference Include="LiveSharp" Version="1.6.33" />
    </ItemGroup>
    <PropertyGroup>
        <!-- File with mtime of last successful npm install -->
        <NpmInstallStampFile>node_modules/.install-stamp</NpmInstallStampFile>
    </PropertyGroup>
    <ItemGroup>
        <IonicStyleFiles Include="node_modules/@ionic/core/css/ionic.bundle.css"/>
        <IonicJSFiles Include="node_modules/@ionic/core/dist/ionic/*"/>
        <IonicJSFiles3 Include="node_modules/@ionic/core/dist/ionic/**"/>
        <IonicJSFiles4 Include="node_modules/@ionic/core/dist/ionic/**/*"/>
        <IonicJSFiles5 Include="node_modules/@ionic/core/dist/ionic/**/*.*"/>
    </ItemGroup>
    <Target Name="PublishCopy" AfterTargets="Publish">

        <Exec Command="ls node_modules/@ionic/core/dist/ionic" />
        <RemoveDir Directories="$(PublishDir)/wwwroot/ionic2"/>
<!--        <Copy SourceFiles="@(IonicJSFiles)" DestinationFiles="@(IonicJSFiles->'$(PublishDir)/wwwroot/ionic2/%(RecursiveDir)%(Filename)%(Extension)')"   />-->
        <Copy SourceFiles="@(IonicJSFiles3)" DestinationFiles="@(IonicJSFiles3->'$(PublishDir)/wwwroot/ionic3/%(RecursiveDir)%(Filename)%(Extension)')"   />
        <Copy SourceFiles="@(IonicJSFiles4)" DestinationFiles="@(IonicJSFiles4->'$(PublishDir)/wwwroot/ionic4/%(RecursiveDir)%(Filename)%(Extension)')"   />
        <Copy SourceFiles="@(IonicJSFiles5)" DestinationFiles="@(IonicJSFiles5->'$(PublishDir)/wwwroot/ionic5/%(RecursiveDir)%(Filename)%(Extension)')"   />
    </Target>
    
    <Target 
            Name="NpmInstall"
            BeforeTargets="BeforeBuild"
            Inputs="package.json"
            Outputs="$(NpmInstallStampFile)">
        <Exec Command="npm install" />
        <RemoveDir Directories="$(ProjectDir)/wwwroot/ionic"/>
        <Copy SourceFiles="@(IonicStyleFiles)" DestinationFiles="@(IonicStyleFiles->'$(ProjectDir)/wwwroot/ionic/%(RecursiveDir)%(Filename)%(Extension)')"  />
        <Copy SourceFiles="@(IonicJSFiles)" DestinationFiles="@(IonicJSFiles->'$(ProjectDir)/wwwroot/ionic/%(RecursiveDir)%(Filename)%(Extension)')"  />
        <Touch Files="$(NpmInstallStampFile)" AlwaysCreate="true" />
    </Target>

</Project>
